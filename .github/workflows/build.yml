# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-13

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Checkout LLVM universal binaries (shallow)
        run: |
          git clone --depth 1 --filter=blob:none --sparse https://github.com/cmajor-lang/llvm.git llvm-universal
          cd llvm-universal
          git sparse-checkout set release/osx/universal

      - name: Slim LLVM libraries
        env:
        CMAKE_ARCH: x86_64
        run: |
          echo "Slimming LLVM universal libs to x86_64"
          mkdir -p slim-llvm-libs
          for lib in llvm-universal/release/osx/universal/lib/lib*.a; do
            base=$(basename "$lib")
            lipo "$lib" -extract $CMAKE_ARCH -output slim-llvm-libs/"$base"
          done
      - name: Build everything
        # todo: do we need to specify the qt@5 path for PKG_CONFIG_PATH?
        run: |
          # export PKG_CONFIG_PATH="$QT_ROOT_DIR/lib/pkgconfig:$PWD/libsndfile/install/lib/pkgconfig:$PWD/libmicrohttpd/libmicrohttpd/lib/pkgconfig"
      
          export LLVM_DIR=${{ github.workspace }}/llvm-universal/release/osx/universal
          export LLVM_LIB_DIR=$PWD/slim-llvm-libs
          export LLVM_INCLUDE_DIRS=$LLVM_DIR/include 

          export LLVM_LIBS=$(ls $LLVM_LIB_DIR/lib*.a | sed "s|$LLVM_LIB_DIR/lib\(.*\)\.a|-l\1|g" | tr '\n' ' ')
          export LLVM_LIBS="-lm -lcurses -lxml2 -lz $LLVM_LIBS"
          export LLVM_LIBS="$(echo "$LLVM_LIBS" | sed 's/[[:space:]]*$//')"
          export LLVM_DEFINITIONS="-D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"
          export LLVM_LD_FLAGS="-L$LLVM_LIB_DIR -Wl,-search_paths_first -Wl,-headerpad_max_install_names"
          export LLVM="$LLVM_LD_FLAGS $LLVM_LIBS"

          export FAUSTLIVE=$PWD/faustlive
          export BUILD_HTTP_STATIC=ON
          export USE_STATIC_SNDFILE=1
          export CMAKEOPT="-DCMAKE_OSX_ARCHITECTURES="$CMAKE_OSX_ARCHITECTURES" -DCMAKE_OSX_DEPLOYMENT_TARGET=$CMAKE_OSX_DEPLOYMENT_TARGET -DCMAKE_BUILD_TYPE=Release"
          export INCLUDE_LLVM=ON
          export USE_LLVM_CONFIG=off